diff -up firefox-78.15.0/build/moz.configure/flags.configure.omv~ firefox-78.15.0/build/moz.configure/flags.configure
--- firefox-78.15.0/build/moz.configure/flags.configure.omv~	2024-05-31 16:15:29.441494972 +0200
+++ firefox-78.15.0/build/moz.configure/flags.configure	2024-05-31 16:16:05.037816266 +0200
@@ -35,31 +35,6 @@ js_option('--disable-new-pass-manager',
          lto.enabled, enable_fuzzing, ubsan)
 def new_pass_manager_flags(enabled, compiler, host, target, pgo, lto,
                            enable_fuzzing, ubsan):
-    if host.os == 'OSX':
-        # Some native Mac builds hang with the new pass manager. Given the
-        # inability to test in CI, don't take the risk of further breakage.
-        return None
-    if target.os == 'OSX' and not pgo:
-        # Also disable when cross-compiling to Mac, because plain-ish opt
-        # builds hang. Variants like asan and ccov work fine, but it would be
-        # too tedious to test them all here. PGO is the only thing that matters
-        # enough to make an exception for.
-        return None
-    if target.os == 'WINNT' and target.cpu == 'aarch64' and not lto:
-        # Building without LTO on aarch64-windows fails on some large functions
-        # because clang doesn't know how to split SEH unwind info.
-        return None
-    if enable_fuzzing and compiler.version < '10.0.0':
-        # Clang 9 does not seem to play well with libFuzzer
-        return None
-    if ubsan and compiler.version >= '10.0.0':
-        # Temporary until https://bugs.llvm.org/show_bug.cgi?id=45835 gets a
-        # real fix: clang 10 hangs with some ubsan-inserted code constructs.
-        return None
-    if enabled and compiler.version >= '9.0.0':
-        if compiler.type == 'clang':
-            return ['-fexperimental-new-pass-manager']
-        elif compiler.type == 'clang-cl':
-            return ['-Xclang', '-fexperimental-new-pass-manager']
+    return None
 
 set_config('MOZ_NEW_PASS_MANAGER_FLAGS', new_pass_manager_flags)
